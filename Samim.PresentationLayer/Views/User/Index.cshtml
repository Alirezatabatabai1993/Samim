@using Samim.PresentationLayer;
@model IEnumerable<Samim.ViewModel.VMUserIndex>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .inner-addon {
        position: relative;
    }

        .inner-addon .fa {
            position: absolute;
            padding: 10px;
        }

    .right-addon .fa {
        right: 0px;
    }

    .right-addon input {
        padding-right: 30px;
    }

    .sortArrow {
        margin-left: 4px;
    }
</style>

<h1>Users</h1>

<button onclick="OpenCreateModal()" class="btn float-right"><span class="fa fa-user-plus"></span></button>

<table id="userGrid" class="table">
    <thead>
        <tr class="table-primary">
            <th scope="col">
                #<span onclick="sortBasedOnNumberFunction()" id="sortBasedOnNumber" class="sortArrow fa fa-arrow-down fa-xs"></span>
            </th>
            <th scope="row">
                First Name<span class="sortArrow fa fa-arrow-down fa-xs"></span>
            </th>
            <th scope="row">
                Last Name<span class="sortArrow fa fa-arrow-down fa-xs"></span>
            </th>
            <th scope="col">
                User Name<span class="sortArrow fa fa-arrow-down fa-xs"></span>
            </th>
            <th scope="col">
                Email
            </th>
            <th scope="col">
                Phone Number
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tbody id="userGridtbody">
            <tr>
                <td scope="row">
                    @item.RowNumber
                </td>
                <td scope="row">
                    @item.FirstName
                </td>
                <td scope="row">
                    @item.LastName
                </td>
                <td scope="row">
                    @item.UserName
                </td>
                <td scope="row">
                    @item.Email
                </td>
                <td scope="row">
                    @item.PhoneNumber
                </td>
                <td>
                    <button class="btn-danger" onclick="OpenDeleteModal('@item.Id','@item.UserName')"><span class="fa fa-trash-o fa-sm"></span></button>
                </td>
                <td>
                    <button class="btn-primary" onclick="OpenEditModal('@item.Id','@item.UserName')"><span class="fa fa-pencil-square-o fa-sm"></span></button>
                </td>
            </tr>
        </tbody>
    }
</table>

<div id="CreateAndEditModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="CreateAndEditModalTitle" class="modal-title"></h4>
                <button type="button" class="btn btn-default float-right" data-dismiss="modal"><span class="fa fa-times"></span></button>
            </div>
            <div id="CreateAndEditModalBody" class="modal-body">
            </div>
        </div>
    </div>
</div>

<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="deleteModalTitle" class="modal-title"></h4>
                <button type="button" class="btn btn-default float-right" data-dismiss="modal"><span class="fa fa-times"></span></button>
            </div>
            <div id="deleteModalBody" class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" id="deleteButton" class="btn btn-danger float-right" onclick="DeleteButtonClicked()"><span class="fa fa-check"></span></button>
                <button type="button" class="btn btn-primary float-right" data-dismiss="modal"><span class="fa fa-ban"></span></button>
            </div>
        </div>
    </div>
</div>
<input id="EditingAnddeletingItemId" type="hidden" />

<div id="EditPasswordModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="EditPasswordModalTitle" class="modal-title"></h4>
                <button type="button" class="btn btn-default float-right" data-dismiss="modal"><span class="fa fa-times"></span></button>
            </div>
            <div id="EditPasswordModalBody" class="modal-body">
            </div>
        </div>
    </div>
</div>
<input id="NewPasswordValue" type="hidden" />

<script type="text/javascript">

	function sortBasedOnNumberFunction() {
		var sortArrow = document.getElementById("sortBasedOnNumber");
        if (sortArrow.classList.contains("fa-arrow-up")) {
            debugger
            //need work
                var x = document.getElementById("userGrid").rows.cells.contains("");
            $("#userGrid td").remove();
            var userTable = document.getElementById("userGrid");
            var userGridRowCount = userGrid.rows.length - 1;
            for (var i = 0; i < userGridRowCount; i++) {
                 var row = userTable.insertRow(1);
                 var cell1 = row.insertCell(0);
                 var cell2 = row.insertCell(1);
                 cell1.innerHTML = "NEW CELL1";
                cell2.innerHTML = "NEW CELL2";
                //userTable.remove();
                //var rows = table.getElementsByTagName('tr');
            }
            @*$.ajax({
                type: "GET",
                url: "@SamimRouteManager.User.Index()",
                data: "orderBy=RowNumber&orderType=DESC"
                //success: Function (response){

                //}
            });*@
			sortArrow.classList.replace("fa-arrow-up", "fa-arrow-down");
        }
		 else {
			sortArrow.classList.replace("fa-arrow-down", "fa-arrow-up");
		}
	}

	function EyeButtonMouseDownFunction() {
		document.getElementById("passwordInput").type = "text";
	}

	function EyeButtonMouseUpFunction() {
		document.getElementById("passwordInput").type = "password";
	}

	function SetNewPasswordToHiddenInput(pass) {
		$("#NewPasswordValue").val(pass);
	}

	$(document).ready(function () {
		$('#CreateAndEditModal').on('hidden.bs.modal', function (e) {
			$('#CreateAndEditForm').trigger("reset");
			$('#CreateAndEditForm').find("span.validation").html("").replaceAll();
		})
	})

	function OpenEditPasswordModal() {
		var id = $("#EditingAnddeletingItemId").val();
		$.ajax({
			type: "GET",
			url: "@SamimRouteManager.User.EditPassword()",
			data: { id: id },
			success: function (response) {
				$("#EditPasswordModalBody").html(response);
				$("#CreateAndEditModal").modal("hide");
				$("#EditPasswordModal").modal("show");
			}
		});
	}

	function OpenDeleteModal(Id, UserName) {
		$("#deleteModalTitle").html("Delete " + UserName);
		$("#deleteModalBody").html("Are you positive about deleting " + UserName + " ?");
		$("#EditingAnddeletingItemId").val(Id);
		$("#DeleteModal").modal();
	}

	function DeleteButtonClicked() {
		var id = document.getElementById("EditingAnddeletingItemId").value;
		$.ajax({
			type: "POST",
			data: { id: id },
			url: "@SamimRouteManager.User.Delete()",
			success: function (response) {
				if (response.success) {
					window.location.reload();
				}
			}
		})
	}

	function OpenEditModal(id,userName) {
		$("#CreateAndEditModalTitle").html("Edit " + userName);
		$("#EditingAnddeletingItemId").val(id);
		$.ajax({
			type: "GET",
			url: "@SamimRouteManager.User.Edit()",
			data: { id: id },
			success: function (response) {
				$("#CreateAndEditModalBody").html(response);
				$("#CreateAndEditModal").modal("show");
			}
		});
	}

	function EditButtonClicked() {
		var CreateAndEditForm = $("#CreateAndEditForm");
		var createAndEditFormSerializedData = CreateAndEditForm.serialize();
		var hiddenPasswordValue = $("#NewPasswordValue").val();
		var data = createAndEditFormSerializedData+"&password="+ hiddenPasswordValue;
		var modal = $("#CreateAndEditModal");
		$.ajax({
			type: "POST",
			data: data ,
			url:"@SamimRouteManager.User.Edit()",
			success: function (response) {
				CreateAndEditForm.find("span.validation").html("").replaceAll();
				var errors = response.errors;
				if (response.success) {
					modal.modal("hide");
					window.location.reload();
				}
				else {
					debugger
					for (var i = 0; i < errors.length; i++) {
						var spanElement = document.getElementById("span" + errors[i].key);
						spanElement.innerHTML = errors[i].value;
					}
				}
			}
		});
	}

	function OpenCreateModal() {
		$("#CreateAndEditModalTitle").html("Create User");
		$.ajax({
			type: "GET",
			url: "@SamimRouteManager.User.Create()",
			success: function (response) {
				$("#CreateAndEditModalBody").html(response);
				$("#CreateAndEditModal").modal("show");
			}
		});
	}

	function SubmitButtonClicked() {
		var CreateAndEditForm = $("#CreateAndEditForm");
		var createFormSerializedData = CreateAndEditForm.serialize();
		var modal = $("#CreateAndEditModal");
		$.ajax({
			type: "POST",
			data: createFormSerializedData,
			url:"@SamimRouteManager.User.Create()",
			success: function (response) {
				CreateAndEditForm.find("span.validation").html("").replaceAll();
				var errors = response.errors;
				if (response.success) {
					modal.modal("hide");
					window.location.reload();
				}
				else {
					for (var i = 0; i < errors.length; i++) {
						var spanElement = document.getElementById("span" + errors[i].key);
						spanElement.innerHTML = errors[i].value;
					}
				}
			}
		});
	}
</script>